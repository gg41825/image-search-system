services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=iamtestginny
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db          # Host bind mount for persistent Mongo data
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  triton:
    image: nvcr.io/nvidia/tritonserver:23.10-py3
    container_name: triton
    restart: unless-stopped
    command: >
      tritonserver
      --model-repository=/model_repository
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    volumes:
      - ./model_repository:/model_repository  # Share the same models dir with the app
    depends_on:
      app:
        condition: service_healthy     # Wait until the app has exported the ONNX model
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: ginny/image-search-app:1.0.0
    container_name: image-search-system
    environment:
      - DEV_MODE=0
      - MONGO_URI=mongodb://root:iamtestginny@mongodb:27017
      - TRITON_URL=http://triton:8000
      - IMG_UPLOAD_DIR=/app/uploads
      - SAMPLE_SIZE=-1
      - INDEX_PATH=/app/data/aligned_index.ann
      - ID_MAP_PATH=/app/data/id_map.json
    ports:
      - "8080:8080"
    volumes:
      - ./model_repository:/model_repository  # App writes exported ONNX here so Triton can read it
      - ./frontend:/frontend                  # Serve static frontend from the container
    depends_on:
      - mongodb
    restart: unless-stopped
    # Healthcheck: only "healthy" when the ONNX model exists (so Triton can start successfully)
    healthcheck:
      test: ["CMD-SHELL", "test -f /model_repository/aligned/1/model.onnx || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongo_data:  # Named volume declaration (unused if you're using the bind mount above)